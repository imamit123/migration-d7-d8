diff --git a/core/modules/migrate/src/Plugin/Migration.php b/core/modules/migrate/src/Plugin/Migration.php
index 3007815d04..63afbb77dd 100644
--- a/core/modules/migrate/src/Plugin/Migration.php
+++ b/core/modules/migrate/src/Plugin/Migration.php
@@ -362,16 +362,18 @@ public function getProcessPlugins(array $process = NULL) {
       $this->processPlugins[$index] = [];
       foreach ($this->getProcessNormalized($process) as $property => $configurations) {
         $this->processPlugins[$index][$property] = [];
-        foreach ($configurations as $configuration) {
-          if (isset($configuration['source'])) {
-            $this->processPlugins[$index][$property][] = $this->processPluginManager->createInstance('get', $configuration, $this);
-          }
-          // Get is already handled.
-          if ($configuration['plugin'] != 'get') {
-            $this->processPlugins[$index][$property][] = $this->processPluginManager->createInstance($configuration['plugin'], $configuration, $this);
-          }
-          if (!$this->processPlugins[$index][$property]) {
-            throw new MigrateException("Invalid process configuration for $property");
+        if(is_array($configurations)) {
+          foreach ($configurations as $configuration) {
+            if (isset($configuration['source'])) {
+              $this->processPlugins[$index][$property][] = $this->processPluginManager->createInstance('get', $configuration, $this);
+            }
+            // Get is already handled.
+            if ($configuration['plugin'] != 'get') {
+              $this->processPlugins[$index][$property][] = $this->processPluginManager->createInstance($configuration['plugin'], $configuration, $this);
+            }
+            if (!$this->processPlugins[$index][$property]) {
+              throw new MigrateException("Invalid process configuration for $property");
+            }
           }
         }
       }
@@ -631,14 +633,16 @@ public function getMigrationDependencies() {
   protected function findMigrationDependencies($process) {
     $return = [];
     foreach ($this->getProcessNormalized($process) as $process_pipeline) {
-      foreach ($process_pipeline as $plugin_configuration) {
-        if (in_array($plugin_configuration['plugin'], ['migration', 'migration_lookup'], TRUE)) {
-          $return = array_merge($return, (array) $plugin_configuration['migration']);
+        if (is_array($process_pipeline)) {
+            foreach ($process_pipeline as $plugin_configuration) {
+                if (in_array($plugin_configuration['plugin'], ['migration', 'migration_lookup'], TRUE)) {
+                    $return = array_merge($return, (array)$plugin_configuration['migration']);
+                }
+                if (in_array($plugin_configuration['plugin'], ['iterator', 'sub_process'], TRUE)) {
+                    $return = array_merge($return, $this->findMigrationDependencies($plugin_configuration['process']));
+                }
+            }
         }
-        if (in_array($plugin_configuration['plugin'], ['iterator', 'sub_process'], TRUE)) {
-          $return = array_merge($return, $this->findMigrationDependencies($plugin_configuration['process']));
-        }
-      }
     }
     return $return;
   }
